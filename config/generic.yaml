packages:
- name: rust
  install:
    cmd: bash
    systemCall: true
    args:
    - '-c'
    - "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
- name: names
  install:
    cmd: bash
    args:
    - '-c'
    - 'curl -sSf https://fnichol.github.io/names/install.sh | sh'
- name: ngrok
  install:
    cmd: bash
    args:
    - '-c'
    - 'curl https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz | tar xzv ngrok'
- name: kustomize
  install:
    cmd: bash
    args:
    - '-c'
    - 'curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash'
- name: kcli
  install:
    cmd: bash
    args:
    - '-c'
    - 'curl -s https://raw.githubusercontent.com/karmab/kcli/master/install.sh | bash'
- name: nvm
  install:
    cmd: bash
    args:
    - '-c'
    - 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash'
- name: openebs
  install:
    cmd: kubectl
    args:
    - apply 
    - '-f'
    - 'https://openebs.github.io/charts/openebs-operator.yaml'
- name: kubesphere
  preInstall:
  - cmd:
      cmd: kubectl
      args:
      - apply
      - '-f'
      - 'https://github.com/kubesphere/ks-installer/releases/download/v3.3.0-rc.1/kubesphere-installer.yaml'
  install:
    cmd: kubectl
    args:
    - apply
    - '-f'
    - https://github.com/kubesphere/ks-installer/releases/download/v3.3.0-rc.1/cluster-configuration.yaml
- name: gitpod
  preInstall:
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'curl https://kots.io/install | bash'
  install:
    cmd: kubectl
    systemCall: true
    args:
    - kots
    - install
    - gitpod
    - '-n'
    - gitpod
- name: qemu-kvm
  packageManager: apt-get
  preInstall:
  - cmd:
      cmd: apt-get
      args: 
      - install
      - libvirt-daemon-system
      - libvirt-clients
      - bridge-utils
      - qemu-system-x86
      - '-y'
- name: qemu-kvm
  packageManager: yum
  preInstall:
  - cmd:
      cmd: yum
      args: 
      - install
      - libvirt
      - libvirt-python
      - libguestfs-tools
      - virt-install
      - '-y'
- name: podman
  packageManager: yum
- name: podman
  packageManager: apt-get
  preInstall:
  - issuePrefix: 'Ubuntu 18.04'
    cmd:
      cmd: apt-get
      args: 
      - install
      - software-properties-common
      - '-y'
  - issuePrefix: 'Ubuntu 18.04'
    cmd:
      cmd: add-apt-repository
      args: 
      - ppa:projectatomic/ppa
      - '-y'
  - issuePrefix: 'Ubuntu 20.04'
    cmd:
      cmd: bash
      args:
        - '-c'
        - 'echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list'
  - issuePrefix: 'Ubuntu 20.04'
    cmd:
      cmd: bash
      args:
        - '-c'
        - 'curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key | sudo apt-key add -'
- name: kubeadm
  packageManager: apt-get
  preInstall:
  - cmd:
      cmd: apt-get
      args: 
      - update
  - cmd:
      cmd: apt-get
      args: 
      - install
      - '-y'
      - apt-transport-https
      - ca-certificates
      - curl
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg'
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list'
  - cmd:
      cmd: apt-get
      args: 
      - update
  - cmd:
      cmd: apt-get
      args: 
      - install
      - '-y'
      - kubelet
      - kubectl
  - cmd:
      cmd: modprobe
      args: 
      - overlay
  - cmd:
      cmd: modprobe
      args: 
      - br_netfilter
  - cmd:
      cmd: ufw
      args: 
      - disable
  - cmd:
      cmd: swapoff
      args: 
      - '-a'
- cmd:
      cmd: bash
      args:
      - '-c'
      - echo "1" > /proc/sys/net/ipv4/ip_forward
- name: vim
  packageManager: brew
- name: vim
  packageManager: apk
- name: vim
  packageManager: apt-get
- name: vim
  packageManager: yum
- name: virt-manager
  packageManager: apt-get
- name: gcc
  packageManager: apt-get
- name: bash-completion
  packageManager: brew
- name: ffmpeg
  packageManager: brew
- name: asciinema
  packageManager: brew
- name: curl
  packageManager: apk
- name: wget
  packageManager: apk
- name: openvpn
  packageManager: apt-get
- name: npm
  packageManager: apt-get
- name: graphviz
  packageManager: apt-get
- name: graphviz
  packageManager: yum
- name: graphviz
  packageManager: brew
- name: go
  packageManager: snap
  install:
    args:
    - '--classic'
- name: ngrok
  packageManager: snap
- name: microk8s
  packageManager: snap
- name: http-server
  packageManager: npm
- name: snyk
  packageManager: npm
- name: yarn
  packageManager: npm
- name: make
  packageManager: apt-get
- name: socat
  packageManager: apt-get
- name: protobuf-compiler
  packageManager: apt-get
- name: ifconfig
  install:
    cmd: bash
    args:
    - '-c'
    - 'apt install -y net-tools'
- name: avahi-daemon
  packageManager: apt-get
- name: bazel
  packageManager: apt-get
  preInstall:
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'apt install apt-transport-https curl gnupg -y'
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/bazel.gpg'
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list'
- name: nvidia-docker2
  packageManager: apt-get
  preInstall:
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'rm -rf /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg'
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg'
  - cmd:
      cmd: bash
      args:
        - '-c'
        - |
          curl -s -L https://nvidia.github.io/libnvidia-container/{{.OS_ID}}{{.OS_VERSION_ID}}/libnvidia-container.list | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
- name: nvidia-docker2
  packageManager: yum
  preInstall:
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'curl -s -L https://nvidia.github.io/libnvidia-container/{{.OS_ID}}{{.OS_VERSION_ID}}/libnvidia-container.repo | sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo'
  - cmd:
      cmd: yum
      args:
        - 'glibc'
        - '-y'
- name: screenfetch
  packageManager: brew
- name: freerdp
  packageManager: brew
- name: freerdp2-x11
  packageManager: apt-get
- name: rpi-imager
  packageManager: apt-get
- name: dnsmasq
  packageManager: apt-get
- name: cloud-init
  packageManager: apt-get
- name: dnsmasq
  packageManager: yum
- name: kubevirt
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/kubevirt/kubevirt/releases/download/v0.58.0/kubevirt-operator.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/kubevirt/kubevirt/releases/download/v0.58.0/kubevirt-cr.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/kubevirt/containerized-data-importer/releases/download/v1.48.1/cdi-operator.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/kubevirt/containerized-data-importer/releases/download/v1.48.1/cdi-cr.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl create -f kubevirt-operator.yaml && kubectl create -f kubevirt-cr.yaml && kubectl create -f cdi-operator.yaml && cdi-cr.yaml'
- name: cni-calico
  # https://docs.tigera.io/calico/3.25/getting-started/kubernetes/quickstart
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl create -f tigera-operator.yaml && kubectl create -f custom-resources.yaml'
- name: lvm-localpv
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://openebs.github.io/charts/lvm-operator.yaml'
      writeTo:
        file: /tmp/lvm-localpv-sc.yaml
        content: |
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: openebs-lvmpv
          parameters:
            storage: "lvm"
            volgroup: "lvmvg"
          provisioner: local.csi.openebs.io
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl apply -f lvm-operator.yaml && kubectl apply -f /tmp/lvm-localpv-sc.yaml'
- name: cert-manager
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl apply -f cert-manager.yaml'
- name: k8s
  # the offical download address is https://dl.k8s.io
  preInstall:
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'echo 1 > /proc/sys/net/ipv4/ip_forward'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i conntrack'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i socat'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd get https://kubernetes-release.pek3b.qingstor.com/release/v1.23.0/bin/linux/amd64/kubeadm -o /usr/local/bin/kubeadm'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'chmod u+x /usr/local/bin/kubeadm'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd get https://kubernetes-release.pek3b.qingstor.com/release/v1.23.0/bin/linux/amd64/kubelet -o /usr/local/bin/kubelet'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'chmod u+x /usr/local/bin/kubelet'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.4.0/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service" | sed "s:/usr/bin:/usr/local/bin:g" | sudo tee /etc/systemd/system/kubelet.service'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'mkdir -p /etc/systemd/system/kubelet.service.d'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.4.0/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf" | sed "s:/usr/bin:/usr/local/bin:g" | sudo tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i containernetworking/plugins'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i opencontainers/runc'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i containerd/containerd@1.6.16'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'hd i crictl'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'modprobe overlay'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'modprobe br_netfilter'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'swapoff -a'
  - cmd:
      writeTo:
        file: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter
  - cmd:
      writeTo:
        file: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'sysctl --system'
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'systemctl enable --now kubelet'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'echo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers --kubernetes-version=v1.23.0 --pod-network-cidr=192.168.0.0/16'
- name: qemu-user-static
  packageManager: apt-get
- name: apt-insecure
  preInstall:
  - cmd:
      cmd: bash
      args: 
      - '-c'
      - 'touch /etc/apt/apt.conf.d/99verify-peer.conf'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'echo >>/etc/apt/apt.conf.d/99verify-peer.conf "Acquire { https::Verify-Peer false }"'
- name: debian-source-aliyun
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'apt install -y apt-transport-https ca-certificates'
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='stretch'" # 9
        content: |
          deb https://mirrors.aliyun.com/debian/ stretch main non-free contrib
          #deb-src https://mirrors.aliyun.com/debian/ stretch main non-free contrib
          deb https://mirrors.aliyun.com/debian-security stretch/updates main
          #deb-src https://mirrors.aliyun.com/debian-security stretch/updates main
          deb https://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib
          #deb-src https://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib
          #deb https://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib
          #deb-src https://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='buster'" # 10
        content: |
          deb https://mirrors.aliyun.com/debian/ buster main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ buster main non-free contrib
          deb https://mirrors.aliyun.com/debian-security buster/updates main
          # deb-src https://mirrors.aliyun.com/debian-security buster/updates main
          deb https://mirrors.aliyun.com/debian/ buster-updates main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ buster-updates main non-free contrib
          deb https://mirrors.aliyun.com/debian/ buster-backports main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ buster-backports main non-free contrib
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='bullseye'" # 11
        content: |
          deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib
          deb https://mirrors.aliyun.com/debian-security/ bullseye-security main
          # deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main
          deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib
          deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib
          # deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib
  install:
    cmd: bash
    args:
    - '-c'
    - 'apt update -y'
- name: debian-source-tuna
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'apt install -y apt-transport-https ca-certificates'
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='stretch'" # 9
        content: |
          deb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free
          # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free
          deb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-free
          # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-free

          deb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-free
          # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-free

          deb https://mirrors.tuna.tsinghua.edu.cn/debian-security stretch/updates main contrib non-free
          # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security stretch/updates main contrib non-free
  install:
    cmd: bash
    args:
    - '-c'
    - 'apt update -y'
- name: ubuntu-source-aliyun
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'apt install -y apt-transport-https ca-certificates'
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='bionic'" # 18.04
        content: |
          deb https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
          # deb https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='focal'" # 20.04
        content: |
          deb https://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
          deb https://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
          # deb-src https://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='hirsute'" # 21.04
        content: |
          deb http://mirrors.aliyun.com/ubuntu hirsute main restricted
          deb http://mirrors.aliyun.com/ubuntu hirsute-updates main restricted
          deb http://mirrors.aliyun.com/ubuntu hirsute universe
          deb http://mirrors.aliyun.com/ubuntu hirsute-updates universe
          deb http://mirrors.aliyun.com/ubuntu hirsute multiverse
          deb http://mirrors.aliyun.com/ubuntu hirsute-updates multiverse
          deb http://mirrors.aliyun.com/ubuntu hirsute-backports main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu hirsute-security main restricted
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='jammy'" # 22.04
        content: |
          deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='kinetic'" # 22.10
        content: |
          deb http://mirrors.aliyun.com/ubuntu/ kinetic main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ kinetic main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ kinetic-security main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ kinetic-security main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ kinetic-updates main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ kinetic-updates main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ kinetic-proposed main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ kinetic-proposed main restricted universe multiverse
          deb http://mirrors.aliyun.com/ubuntu/ kinetic-backports main restricted universe multiverse
          # deb-src http://mirrors.aliyun.com/ubuntu/ kinetic-backports main restricted universe multiverse
  install:
    cmd: bash
    args:
    - '-c'
    - 'apt update -y'
- name: ubuntu-source-default
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'apt install -y apt-transport-https ca-certificates'
  - cmd:
      writeTo:
        file: /etc/apt/sources.list
        when: "OS_VERSION_CODENAME=='jammy'" # 22.04
        content: |
          deb http://cn.archive.ubuntu.com/ubuntu jammy main restricted
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy main restricted
          deb http://cn.archive.ubuntu.com/ubuntu jammy-updates main restricted
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-updates main restricted
          deb http://cn.archive.ubuntu.com/ubuntu jammy universe
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy universe
          deb http://cn.archive.ubuntu.com/ubuntu jammy-updates universe
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-updates universe
          deb http://cn.archive.ubuntu.com/ubuntu jammy multiverse
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy multiverse
          deb http://cn.archive.ubuntu.com/ubuntu jammy-updates multiverse
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-updates multiverse
          deb http://cn.archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
          deb http://cn.archive.ubuntu.com/ubuntu jammy-security main restricted
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-security main restricted
          deb http://cn.archive.ubuntu.com/ubuntu jammy-security universe
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-security universe
          deb http://cn.archive.ubuntu.com/ubuntu jammy-security multiverse
          # deb-src http://cn.archive.ubuntu.com/ubuntu jammy-security multiverse
  install:
    cmd: bash
    args:
    - '-c'
    - 'apt update -y'
- name: disable-selinux
  install:
    cmd: bash
    args:
    - '-c'
    - 'setenforce 0'
  preInstall:
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'echo Please edit the config as well. /etc/selinux/config'
- name: max-user-ns
  install:
    cmd: bash
    args:
    - '-c'
    - 'sysctl user.max_user_namespaces=31477'
  preInstall:
  - cmd:
      cmd: bash
      args:
        - '-c'
        - 'echo "user.max_user_namespaces = 31477" > /etc/sysctl.d/99-usernamespaces.conf'
- name: lvm2
  packageManager: apt-get
- name: lvm2
  packageManager: yum
- name: rook
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd i cert-manager'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd i lvm2'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/rook/rook/raw/v1.10.11/deploy/examples/crds.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/rook/rook/raw/v1.10.11/deploy/examples/common.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/rook/rook/raw/v1.10.11/deploy/examples/operator.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/rook/rook/raw/v1.10.11/deploy/examples/cluster.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f crds.yaml -f common.yaml -f operator.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl create -f cluster.yaml'
- name: metrics-server
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'hd get https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl apply -f components.yaml'
- name: ctr-k8s-mirror
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image pull registry.cn-hangzhou.aliyuncs.com/google_containers/csi-node-driver-registrar:v2.7.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/csi-node-driver-registrar:v2.7.0 registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.7.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image pull registry.cn-hangzhou.aliyuncs.com/google_containers/csi-attacher:v4.1.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/csi-attacher:v4.1.0 registry.k8s.io/sig-storage/csi-attacher:v4.1.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image pull registry.cn-hangzhou.aliyuncs.com/google_containers/csi-resizer:v1.7.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/csi-resizer:v1.7.0 registry.k8s.io/sig-storage/csi-resizer:v1.7.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image pull registry.cn-hangzhou.aliyuncs.com/google_containers/csi-provisioner:v3.4.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/csi-provisioner:v3.4.0 registry.k8s.io/sig-storage/csi-provisioner:v3.4.0'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image pull registry.cn-hangzhou.aliyuncs.com/google_containers/csi-snapshotter:v6.2.1'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'ctr -n k8s.io image tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/csi-snapshotter:v6.2.1 registry.k8s.io/sig-storage/csi-snapshotter:v6.2.1'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'echo done'
- name: ssh-root-enable
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'sed -i "/PermitRootLogin/s/^.*$/PermitRootLogin yes/g" /etc/ssh/sshd_config'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'systemctl restart sshd.service'
- name: zsh
  packageManager: apt-get
- name: csh
  packageManager: apt-get
- name: tcsh
  packageManager: apt-get
- name: ksh
  packageManager: apt-get
- name: dash
  packageManager: apt-get
- name: fish
  packageManager: apt-get
- name: groovy
  packageManager: apt-get
- name: maven
  packageManager: apt-get
- name: buildah
  packageManager: apt-get
- name: wingetui
  packageManager: winget
- name: wingetui
  packageManager: scoop
- name: maven
  packageManager: scoop
- name: go
  packageManager: scoop
- name: vim
  packageManager: scoop
- name: make
  packageManager: scoop
- name: buildah
  packageManager: yum
- name: golang
  packageManager: yum
  preInstall:
  - cmd:
      cmd: yum
      args: 
      - install
      - epel-release
- name: external-snapshotter
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/deploy/kubernetes/csi-snapshotter/rbac-csi-snapshotter.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/deploy/kubernetes/csi-snapshotter/rbac-external-provisioner.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/deploy/kubernetes/csi-snapshotter/setup-csi-snapshotter.yaml'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml'
  install:
    cmd: bash
    args: 
    - '-c'
    - 'kubectl create -f https://github.com/kubernetes-csi/external-snapshotter/raw/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml'
- name: swapoff
  preInstall:
  - cmd:
      cmd: bash
      args:
      - '-c'
      - 'swapoff -a'
  - cmd:
      cmd: bash
      args:
      - '-c'
      - sed -e '/swap/ s/^#*/#/' -i /etc/fstab
  install:
    cmd: bash
    args: 
    - '-c'
    - 'systemctl mask swap.target'
